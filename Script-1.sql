SELECT * FROM tab;

--대륙--
SELECT * FROM REGIONS;

--나라정보--
SELECT * FROM COUNTRIES;

--위치 정보--
SELECT * FROM LOCATIONS;

--부서 정보--
SELECT*FROM DEPARTMENTS ;

--직원 정보--
SELECT * FROM EMPLOYEES;

--직업,직급 정보--
SELECT * FROM JOBS;

--승진 정보--
SELECT * FROM JOB_HISTORY;


------------------------------------------------

SELECT *
FROM LOCATIONS;

SELECT CITY,POSTAL_CODE FROM LOCATIONS;

--사원의 성,이름,월급,입사일

SELECT FIRST_NAME,LAST_NAME,SALARY,HIRE_DATE FROM EMPLOYEES;

SELECT * FROM EMPLOYEES;

SELECT SALARY*12,SALARY FROM EMPLOYEES;
--SALARY*12는 실제테이블에 없는 자료

SELECT FIRST_NAME,LAST_NAME,SALARY,SALARY*12 AS "YEAR SALARY",(SALARY*12)-5000 AS SAL ,HIRE_DATE AS 입사날짜
FROM EMPLOYEES;
--띄어쓰기 할때는 "" 쓰기

--함수 호출
SELECT SUM(SALARY)/COUNT(EMPLOYEE_ID), AVG(SALARY)  
FROM EMPLOYEES;

--중복제거
SELECT DISTINCT DEPARTMENT_ID FROM EMPLOYEES;

SELECT DISTINCT DEPARTMENT_ID, EMPLOYEE_ID  FROM EMPLOYEES;
--EMPLYOEE_ID와 DEPARTMENT_ID와 개수가 다르기때문에 중복이 무시해 버린다

--||는 연결 연산자
SELECT STATE_PROVINCE  || '의 도시명은' || CITY 
FROM LOCATIONS;

---WHERE
SELECT FIRST_NAME,SALARY,DEPARTMENT_ID
FROM EMPLOYEES 
WHERE DEPARTMENT_ID =90;

--사원의 정보, 사원이 ID, 직급, 입사일, 월급
--월급이 8000이상이고 부서 아이디가 100인 사람

SELECT EMPLOYEE_ID,JOB_ID,HIRE_DATE,SALARY,DEPARTMENT_ID  
FROM EMPLOYEES 
WHERE SALARY>=8000 AND DEPARTMENT_ID =100;

--에러 -> 함수는 단독으로 쓸 수 없다
SELECT EMPLOYEE_ID 
FROM EMPLOYEES
WHERE SALARY  > AVG(SALARY);

-- =NULL을 쓰면 나오지 않는다
SELECT *
FROM EMPLOYEES
WHERE COMMISSION_PCT  IS NULL;

SELECT *
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL;

-- 사원의 모든 정보
-- 급여 8000 이상 15000이하
SELECT *
FROM EMPLOYEES
WHERE SALARY>=8000 AND SALARY <=15000;
--BTWEEN -> 이상 이하
SELECT *
FROM EMPLOYEES 
WHERE SALARY BETWEEN 8000 AND 15000;

--사원의 모든 정보
--부서 번호가 60, 100인 사람들
SELECT * 
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 60 OR DEPARTMENT_ID = 100;

SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (60,100);

--NOT
SELECT * 
FROM EMPLOYEES
WHERE DEPARTMENT_ID NOT IN(60,100);

--사원의 모든 정보 LAST_NAME이 Austin
SELECT *
FROM EMPLOYEES 
WHERE LAST_NAME ='Austin';

-- 사원의 모든 정보 2004 1월 1일 이후 입사한 사원들
SELECT 	* 
FROM EMPLOYEES
WHERE HIRE_DATE >= '2004-01-01';

SELECT *
FROM EMPLOYEES
WHERE LAST_NAME LIKE '%K%' OR LAST_NAME LIKE '%k%';

-- 사원의 급여 순으로
SELECT LAST_NAME, SALARY
FROM EMPLOYEES 
ORDER BY SALARY DESC;

--LAST_NAME기준으로 오름차순
SELECT LAST_NAME,SALARY
FROM EMPLOYEES 
ORDER BY LAST_NAME ASC;

-- 사원의 모든 정보 입사 순
SELECT *
FROM EMPLOYEES 
ORDER BY HIRE_DATE ASC;


